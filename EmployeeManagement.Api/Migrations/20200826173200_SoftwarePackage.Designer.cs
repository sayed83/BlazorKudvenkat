// <auto-generated />
using System;
using EmployeeManagement.Api.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EmployeeManagement.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200826173200_SoftwarePackage")]
    partial class SoftwarePackage
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EmployeeManagement.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            DepartmentName = "IT"
                        },
                        new
                        {
                            DepartmentId = 2,
                            DepartmentName = "HR"
                        },
                        new
                        {
                            DepartmentId = 3,
                            DepartmentName = "Payroll"
                        },
                        new
                        {
                            DepartmentId = 4,
                            DepartmentName = "Admin"
                        });
                });

            modelBuilder.Entity("EmployeeManagement.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfBrith")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            DateOfBrith = new DateTime(1992, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            Email = "mdsayed83@gmail.com",
                            FirstName = "Sayed",
                            Gender = 0,
                            LastName = "Hossain",
                            PhotoPath = "images/sayed.jpg"
                        },
                        new
                        {
                            EmployeeId = 2,
                            DateOfBrith = new DateTime(1990, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            Email = "mdhossain@gmail.com",
                            FirstName = "Md",
                            Gender = 0,
                            LastName = "Hossain",
                            PhotoPath = "images/hossain.jpg"
                        });
                });

            modelBuilder.Entity("EmployeeManagement.Models.ImageCriteria", b =>
                {
                    b.Property<int>("ImageCriteriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageCriteriaCaption")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImageCriteriaId");

                    b.ToTable("ImageCriteria");
                });

            modelBuilder.Entity("EmployeeManagement.Models.MenuPermission_Details", b =>
                {
                    b.Property<int>("MenuPermissionDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCreate")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEdit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReport")
                        .HasColumnType("bit");

                    b.Property<bool>("IsView")
                        .HasColumnType("bit");

                    b.Property<int>("MenuPermissionId")
                        .HasColumnType("int");

                    b.Property<int>("ModuleMenuId")
                        .HasColumnType("int");

                    b.HasKey("MenuPermissionDetailsId");

                    b.HasIndex("MenuPermissionId");

                    b.HasIndex("ModuleMenuId");

                    b.ToTable("MenuPermission_Details");
                });

            modelBuilder.Entity("EmployeeManagement.Models.MenuPermission_Master", b =>
                {
                    b.Property<int>("MenuPermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Updatedby")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("comid")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("userid")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("useridPermission")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("useridUpdate")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("MenuPermissionId");

                    b.ToTable("MenuPermission_Master");
                });

            modelBuilder.Entity("EmployeeManagement.Models.Module", b =>
                {
                    b.Property<int>("ModuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ModuleCaption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleClassa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleClassi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<byte[]>("ModuleImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ModuleImageExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SLNo")
                        .HasColumnType("int");

                    b.Property<int>("isInactive")
                        .HasColumnType("int");

                    b.HasKey("ModuleId");

                    b.ToTable("Module");
                });

            modelBuilder.Entity("EmployeeManagement.Models.ModuleGroup", b =>
                {
                    b.Property<int>("ModuleGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleGroupCaption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ModuleGroupImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ModuleGroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.Property<int?>("SLNo")
                        .HasColumnType("int");

                    b.HasKey("ModuleGroupId");

                    b.HasIndex("ModuleId");

                    b.ToTable("ModuleGroup");
                });

            modelBuilder.Entity("EmployeeManagement.Models.ModuleMenu", b =>
                {
                    b.Property<int>("ModuleMenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("ImageCriteriaId")
                        .HasColumnType("int");

                    b.Property<int>("ModuleGroupId")
                        .HasColumnType("int");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.Property<string>("ModuleImageExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleMenuCaption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleMenuClassi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleMenuController")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ModuleMenuImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ModuleMenuLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleMenuName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int?>("SLNo")
                        .HasColumnType("int");

                    b.Property<int>("isInactive")
                        .HasColumnType("int");

                    b.Property<int>("isParent")
                        .HasColumnType("int");

                    b.HasKey("ModuleMenuId");

                    b.HasIndex("ImageCriteriaId");

                    b.HasIndex("ModuleGroupId");

                    b.HasIndex("ModuleId");

                    b.HasIndex("ParentId");

                    b.ToTable("ModuleMenu");
                });

            modelBuilder.Entity("EmployeeManagement.Models.SoftwaredPackage", b =>
                {
                    b.Property<int>("SoftwarePackageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LinkAdd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PackageEndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PackageStartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoftwarePackageCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoftwarePackageDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("SoftwarePackageFileExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("SoftwarePackageImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("SoftwarePackageImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SoftwarePackageId");

                    b.ToTable("SoftwaredPackage");
                });

            modelBuilder.Entity("EmployeeManagement.Models.Employee", b =>
                {
                    b.HasOne("EmployeeManagement.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EmployeeManagement.Models.MenuPermission_Details", b =>
                {
                    b.HasOne("EmployeeManagement.Models.MenuPermission_Master", "MenuPermissionMasters")
                        .WithMany("MenuPermission_Details")
                        .HasForeignKey("MenuPermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployeeManagement.Models.ModuleMenu", "ModuleMenus")
                        .WithMany("MenuPermissionDetails")
                        .HasForeignKey("ModuleMenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EmployeeManagement.Models.ModuleGroup", b =>
                {
                    b.HasOne("EmployeeManagement.Models.Module", "vModule")
                        .WithMany("vModuleGroup")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EmployeeManagement.Models.ModuleMenu", b =>
                {
                    b.HasOne("EmployeeManagement.Models.ImageCriteria", "vImageCriteria")
                        .WithMany()
                        .HasForeignKey("ImageCriteriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployeeManagement.Models.ModuleGroup", "vModuleGroup")
                        .WithMany("vModuleMenu")
                        .HasForeignKey("ModuleGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployeeManagement.Models.Module", "vModule")
                        .WithMany()
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployeeManagement.Models.ModuleMenu", "ParentModuleMenu")
                        .WithMany("ModuleMenuChildren")
                        .HasForeignKey("ParentId");
                });
#pragma warning restore 612, 618
        }
    }
}
